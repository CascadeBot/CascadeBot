{
  "command_descriptions": {
    "invite": "Returns the bot invite link, to invite the bot to other Discord guilds.",
    "prefix": "Gets and sets the current guild prefix.",
    "support": "Returns a link to the Discord support server.",
    "usage": "Gets the usage for a command.",
    "cat": "Returns a random picture of a cat.",
    "dog": "Returns a random picture of a dog.",
    "roles": "Returns the server's roles.",
    "serverinfo": "Returns information regarding the specified server.",
    "userinfo": "Returns information regarding the specified user.",
    "module": {
      "main_command": "Interacts with modules by enabling, disabling or listing them.",
      "disable": "Disables the specified module.",
      "enable": "Enables the specified module.",
      "list": "Lists all modules."
    },
    "settings": "Allows users to change settings for the guild.",
    "ban": "Bans or forcebans the specified user.",
    "kick": "Kicks the specified user.",
    "softban": "Bans and then unbans a specified user in order to remove messages and kick the user.",
    "unban": "Unbans the specified user.",
    "tag": {
      "main_command": "Tag command",
      "raw": "Displays a tag's content and category.",
      "placeholders": "Lists all available placeholders.",
      "list": "Lists all a guild's tags.",
      "edit": "Edits a tag.",
      "category": "Moves a tag to a specific category.",
      "create": "Creates a tag."
    },
    "join": "Joins the bot to a voice channel.",
    "leave": "Tells the bot to leave a voice channel.",
    "loop": "Changes between loop modes.",
    "pause": "Pauses the currently playing track.",
    "play": "Plays music.",
    "playing": "Get playing music.",
    "queue": "Display the current queue.",
    "resume": "Resumes music.",
    "search": "Searches for a song.",
    "shuffle": "Shuffles music in a queue.",
    "skip": "Skips the current song.",
    "stop": "Stops music when playing.",
    "volume": "Returns the current volume."
  },
  "commands": {
    "support": {
      "command": "support",
      "cascade_support_server": "Cascade Support Server: {0}"
    },
    "prefix": {
      "command": "prefix",
      "prefix_reset": "The prefix has been reset to: `{0}`",
      "prefix_too_long": "The requested prefix is too long!",
      "new_prefix": "The new prefix is: `{0}`",
      "current_prefix": "The current server prefix is `{0}`",
      "args": {
        "reset": "reset"
      }
    },
    "usage": {
      "command": "usage",
      "specify_usage": "Please specify command to get usage from!",
      "command_not_found": "Command `{0}` not found!"
    },
    "cat": {
      "command": "cat",
      "error_loading": "Error loading cat picture! @frowning@"
    },
    "dog": {
      "command": "dog",
      "error_loading": "Error loading dog picture! @frowning@"
    },
    "roles": {
      "command": "roles",
      "header_id": "Role ID",
      "header_name": "Role Name",
      "header_members": "No. Users",
      "header_color": "Colour"
    },
    "serverinfo": {
      "command": "serverinfo",
      "guild_creation_date": "Creation Date",
      "guild_name": "Guild Name",
      "guild_owner": "Owner",
      "guild_region": "Region",
      "guild_member_count": "Member Count",
      "guild_id": "ID: {0}"
    },
    "userinfo": {
      "command": "userinfo",
      "user_created": "User Created",
      "user_join_date": "Join Date",
      "user_id": "User ID",
      "user_mutual_servers": "Mutual Servers",
      "user_official_role": "Cascade Official Role",
      "status": "Status",
      "activity": "Activity",
      "role_id": "Role ID",
      "role_name": "Role Name"
    },
    "settings": {
      "command": "settings",
      "cannot_edit": "You cannot edit this setting! You need the: {0} flag to do this!",
      "setting_set": "Setting {0} has been set to a value of {1}.",
      "cannot_access": "Could not access that setting!",
      "setting": "Setting",
      "current_value": "Current value",
      "cannot_find_field": "Cannot find that field!"
    },
    "ban": {
      "command": "ban",
      "cannot_find_user": "We can't find that user!",
      "forcefully_ban": "**We couldn't find that user in this guild!** \n If you would like to forcefully ban them, please react to this message!"
    },
    "kick": {
      "command": "kick",
      "cannot_find_user": "Could not find that user!"
    },
    "softban": {
      "softban": "softban",
      "no_specified_user": "Not enough arguments (No specified member)",
      "cannot_find_user": "Could not find that user!"
    },
    "unban": {
      "command": "unban",
      "cannot_unban": "Could not find a user to unban matching: {0}",
      "several_matches": "There is more than one user that matches this criteria! \n Please enter the ID or the user's full name!"
    },
    "module": {
      "command": "module",
      "disable": {
        "command": "disable",
        "disabled": "The module `{0}` has been disabled!",
        "already_disabled": "The module `{0}` is already disabled!",
        "cannot_find_module": "We couldn't find that module. Use `{0}module list` for a list of modules."
      },
      "enable": {
        "command": "enable",
        "enabled": "The module `{0}` has been enabled!",
        "already_enabled": "The module `{0}` is already enabled!",
        "cannot_find_module": "We couldn't find that module. Use `{0}module list` for a list of modules."
      },
      "list": {
        "command": "list"
      }
    },
    "join": {
      "command": "join",
      "user_not_connected": "You are not connected to a voice channel!",
      "already_connected": "I am already connected to your channel!",
      "successfully_joined": "I have successfully joined the voice channel `#{0}`"
    },
    "leave": {
      "command": "leave",
      "successfully_left": "I have successfully left the channel `#{0}`"
    },
    "loop": {
      "command": "loop",
      "looping_disabled": "Looping has been disabled!",
      "looping_set": "Set to loop the current **{0}**!",
      "not_valid_mode": "`{0}` is not a valid loop mode! Valid modes are: {0}"
    },
    "pause": {
      "command": "pause",
      "already_paused": "Music has already been paused! Use **{0}resume** to resume.",
      "successfully_paused": "Paused! Use **{0}resume** to resume."
    },
    "play": {
      "command": "play",
      "could_not_find_matches": "We could not find music that matches: `{0}`",
      "encountered_error": "We encountered an error processing that! {0}"
    },
    "playing": {
      "command": "playing",
      "no_music_playing": "There is no music playing!",
      "loop_mode": "Loop mode",
      "up_next": "Up next"
    },
    "queue": {
      "command": "queue",
      "no_tracks_playing": "There are no tracks playing!",
      "load": {
        "command": "load",
        "cannot_find_playlist": "Couldn't find playlist `{0}`.",
        "load_track": "Where would you like to load this track from\n@one@ User\n@two@ Guild"
      },
      "save": {
        "command": "save",
        "scope_not_found": "Scope `{0}` not found!",
        "playlist_already_exists": "Playlist already exists in guild and you don't have the perm `cascade.queue.dave.overwrite` to overwrite it.",
        "playlist_overwrite": "Playlist already exists. Would you like to overwrite it?",
        "saved_playlist": "Saved playlist `{0}` in scope `{1}`."
      }
    },
    "resume": {
      "command": "resume",
      "successfully_resumed": "Music has been resumed!",
      "already_resumed": "Music is already playing! Use **{0}pause** to pause it."
    },
    "search": {
      "command": "search",
      "cannot_find_video": "Couldn't find video!",
      "error_loading_track": "Error loading track",
      "multiple_results": "We found multiple results for this search!",
      "search_timed_out": "The search for `{0}` has timed out!"
    },
    "shuffle": {
      "command": "shuffle",
      "enabled": "Shuffling has been enabled!",
      "disabled": "Shuffling has been disabled!"
    },
    "skip": {
      "command": "skip",
      "not_playing": "I'm not playing anything!",
      "forcefully_skipped": "Forcefully skipped the song!",
      "cannot_skip": {
        "no_music": "Can't skip if you aren't listening to music!",
        "no_vote": "Cannot vote if you aren't listening!"
      },
      "added_vote": "A skip vote is already running, but we added your vote automatically.",
      "skipped_user_queued": "Skipped currently playing song because you queued it.",
      "skipping": "Skipping song!",
      "not_skipping": "Not skipping song!"
    },
    "stop": {
      "command": "stop",
      "stopped": "Music has been stopped!",
      "not_stopped": "Music isn't playing, nothing to stop!"
    },
    "volume": {
      "command": "volume",
      "current_volume": "Current volume is {0}%.",
      "greater_than_zero": "Volume needs to be greater than 0%.",
      "extreme_volume": "Are you sure you want to exceed 100% volume?",
      "volume_set": "Volume set to {0}%.",
      "volume_already_set": "Volume is already {0}%.",
      "volume_range": "Volume needs to be between 0% and 200%."
    },
    "tag": {
      "command": "tag",
      "cannot_find_tag": "Couldn't find tag with name `{0}`.",
      "category": {
        "command": "category",
        "successfully_set_tag": "Set tag `{0}` category to `{1}`."
      },
      "create": {
        "command": "create",
        "successfully_created_tag": "Successfully created tag with name `{0}`."
      },
      "delete": {
        "command": "delete",
        "successfully_deleted_tag": "Successfully deleted tag!",
        "tag_doesnt_exist": "Tag `{0}` doesn't exist!"
      },
      "edit": {
        "command": "edit",
        "successfully_edited_tag": "Successfully updated tag `{0}`."
      },
      "list": {
        "command": "list",
        "no_tags_found": "Server has no tags!"
      },
      "placeholders": {
        "command": "placeholders",
        "header": "To use placeholders in tags you wrap the placeholder in `{}` (example: `{server_name}`). If a place holder requires more options (like args) you use this format `{placeholder:option1,option2}` (example: `{args:0}`)."
      },
      "raw": {
        "command": "raw"
      }
    }
  },
  "permissions": {
    "module": {
      "info": {
        "name": "module.info",
        "label": "Information module"
      },
      "fun": {
        "name": "module.fun",
        "label": "Fun module"
      },
      "music": {
        "name": "module.music",
        "label": "Music module"
      },
      "moderation": {
        "name": "module.moderation",
        "label": "Moderation module"
      },
      "management": {
        "name": "module.management",
        "label": "Management module"
      }
    },
    "prefix": {
      "reset": {
        "name": "prefix.reset",
        "label": "Reset command prefix"
      },
      "set": {
        "name": "prefix.set",
        "label": "Set command prefix"
      }
    },
    "cat": {
      "name": "cat",
      "label": "Cat command"
    },
    "dog": {
      "name": "dog",
      "label": "Dog command"
    },
    "random": {
      "name": "random",
      "label": "Random number command"
    },
    "roles": {
      "name": "roles",
      "label": "Roles command"
    },
    "serverinfo": {
      "name": "serverinfo",
      "label": "Server info command"
    },
    "userinfo": {
      "name": "userinfo",
      "label": "User info command"
    },
    "module": {
      "name": "module",
      "label": "Module command",
      "disable": {
        "name": "module.disable",
        "label": "Disable module sub-command"
      },
      "enable": {
        "name": "module.enable",
        "label": "Enable module sub-command"
      },
      "list": {
        "name": "module.list",
        "label": "List modules sub-command"
      }
    },
    "settings": {
      "name": "settings",
      "label": "Settings command"
    },
    "tag": {
      "name": "tag",
      "label": "Tag command",
      "category": {
        "name": "tag.category",
        "label": "Tag category sub-command"
      },
      "create": {
        "name": "tag.create",
        "label": "Tag create sub-command"
      },
      "delete": {
        "name": "tag.delete",
        "label": "Tag delete sub-command"
      },
      "edit": {
        "name": "tag.edit",
        "label": "Tag edit sub-command"
      },
      "list": {
        "name": "tag.list",
        "label": "Tag list sub-command"
      },
      "placeholder": {
        "name": "tag.placeholder",
        "label": "Tag placeholder sub-command"
      },
      "raw": {
        "name": "tag.raw",
        "label": "Tag raw sub-command"
      }
    },
    "ban": {
      "name": "ban",
      "label": "Ban command"
    },
    "kick": {
      "name": "kick",
      "label": "Kick command"
    },
    "softban": {
      "name": "softban",
      "label": "Soft-ban command"
    },
    "unban": {
      "name": "unban",
      "label": "Unban command"
    },
    "join": {
      "name": "join",
      "label": "Join command",
      "other": {
        "name": "join.other",
        "label": "Make Cascade join a different channel"
      }
    },
    "leave": {
      "name": "leave",
      "label": "Leave command",
      "other": {
        "name": "leave.other",
        "label": "Make Cascade leave another channel"
      }
    },
    "loop": {
      "name": "loop",
      "label": "Loop command"
    },
    "pause": {
      "name": "pause",
      "label": "Pause command"
    },
    "play": {
      "name": "play",
      "label": "Play command"
    },
    "playing": {
      "name": "playing",
      "label": "Playing command"
    },
    "queue": {
      "name": "queue",
      "label": "Queue command",
      "load": {
        "name": "queue.load",
        "label": "Queue load sub-command"
      },
      "save": {
        "name": "queue.save",
        "label": "Queue save sub-command",
        "overwrite": {
          "name": "queue.save.overwrite",
          "label": "Overwrite guild playlist"
        }
      }
    },
    "resume": {
      "name": "resume",
      "label": "Resume command"
    },
    "search": {
      "name": "search",
      "label": "Search command"
    },
    "shuffle": {
      "name": "shuffle",
      "label": "Shuffle command"
    },
    "skip": {
      "name": "skip",
      "label": "Skip command",
      "force": {
        "name": "skip.force",
        "label": "Force skip a song"
      }
    },
    "stop": {
      "name": "stop",
      "label": "Stop command"
    },
    "volume": {
      "name": "volume",
      "label": "Volume command",
      "extreme": {
        "name": "volume.extreme",
        "label": "Raise volume above 100%"
      }
    }
  },
  "moderation_manager": {
    "failed_action": "Could not {0} the user {1} due to an exception!",
    "cannot_action_yourself": "You cannot {0} yourself!",
    "cannot_action_bot": "You cannot {0} a bot!",
    "missing_permission": "Cannot {0} user {1}, missing `{2}` permission!",
    "cannot_action_owner": "Cannot {0} user {1} as they are the owner of the guild!",
    "cannot_action_superior": "Cannot {0} user {1} the top role they have is higher than mine!",
    "success": "{0} has been {1}!"
  },
  "music": {
    "misc": {
      "load_options": "@musical_note@ - Load as track `{0}`\n@notes@ - Load as playlist `{1}`",
      "load_options_title": "Load as a single track or as a playlist?",
      "load_options_typed": "\n\nPlease type either `track` or `playlist`!",
      "cannot_find_tracks": "We couldn't find any tracks to load!",
      "num_tracks": "{0} tracks",
      "loaded_tracks": "Loaded `{0}` tracks with a total length of `{1}`"
    },
    "handler": {
      "error_searching": "Error searching from YouTube!",
      "error_processing": "Error while processing search!",
      "error_reading": "Error reading YouTube data!",
      "no_data_returned": "YouTube didn't return any data!",
      "query_unsuccessful": "The query was unsuccessful! Response: {0}",
      "more_than_five": "YouTube returned more then 5 results! A check of the YouTube api is recommended"
    }
  },
  "responses": {
    "invalid_user": "Invalid User!",
    "cannot_find_guild": "We cannot find that guild!",
    "not_enough_arguments": "Not enough arguments!",
    "no_arguments_for_command": "No arguments for command `{0}`!",
    "empty_result": "Empty result!",
    "cannot_find_argument": "I can't find that argument!",
    "no_specified_user": "Not enough arguments (no specified member)",
    "cannot_find_user": "I cannot find that user!",
    "cannot_find_user_matching": "Cannot find a user matching: {0}",
    "cannot_find_voice_channel": "Could not find that voice channel to connect to!",
    "voice_not_connected": "I am not connected to a voice channel!",
    "type_one_of": "Please type one of: ",
    "invalid_guild_id": "That isn't a valid guild ID!",
    "no_cascade_perm_discord": "You don't have the permission `{0}` or the Discord permission(s) {1} that you need to do this!",
    "no_cascade_perm": "You don't have the permission `{0}` that you need to do this!",
    "no_discord_perm": "You don't have the Discord permission `{0}` that you need to do this!",
    "no_discord_perm_bot": "I don't have the Discord permission `{0}` that I need to do this!",
    "incorrect_usage": "Incorrect usage. Proper usage:\n{0}",
    "failed_to_process_command": "There was an error while processing your command!",
    "failed_to_run_command": "There was an error while running the command!",
    "cant_delete_guild_messages": "We can't delete guild messages as we won't have the permission manage messages! Please either give me this permission or turn off command message deletion!",
    "module_for_command_disabled": "The module `{0}` for command `{1}` is disabled!"
  },
  "statuses": {
    "streaming": "Streaming",
    "online": "Online",
    "offline": "Offline",
    "do_not_disturb": "Do Not Disturb",
    "idle": "Idle"
  },
  "enums": {
    "flag": {
      "beta": "beta",
      "spotify": "spotify",
      "music_services": "music services"
    },
    "loop_mode": {
      "disabled": "disabled",
      "playlist": "playlist",
      "song": "song"
    },
    "module": {
      "core": "core",
      "management": "management",
      "music": "music",
      "informational": "informational",
      "moderation": "moderation",
      "fun": "fun",
      "developer": "developer"
    }
  },
  "game_types": {
    "default": "Playing",
    "streaming": "Streaming",
    "listening": "Listening to",
    "watching": "Watching"
  },
  "mod_actions": {
    "ban": {
      "name": "ban",
      "verb": "banned"
    },
    "unban": {
      "name": "unban",
      "verb": "unbanned"
    },
    "soft_ban": {
      "name": "soft ban",
      "verb": "soft-banned"
    },
    "force_ban": {
      "name": "force ban",
      "verb": "forcefully banned"
    },
    "kick": {
      "name": "kick",
      "verb": "kicked"
    },
    "mute": {
      "name": "mute",
      "verb": "muted"
    },
    "warn": {
      "name": "warn",
      "verb": "warned"
    }
  },
  "words": {
    "permission": "Permission",
    "subcommand": "Subcommand",
    "command": "Command",
    "module": "Module",
    "discord_perms": "Discord permissions",
    "default_permission": "Default permission",
    "no_permission": "No permission",
    "reason": "Reason",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "status": "Status",
    "queue": "Queue",
    "requested_by": "Requested by ",
    "playing": "Playing",
    "paused": "Paused",
    "progress": "Progress",
    "volume": "Volume",
    "category": "Category",
    "tag": "Tag"
  },
  "messaging": {
    "loading_page": "Paged message loading...",
    "exception_message": "**{0}**\nStack trace: {1}",
    "report_error": "Please report the stack trace and the error to the developers here: {0}"
  },
  "page_objects": {
    "page_footer": "Page {0}/{1}"
  },
  "settings": {
    "core": {
      "mentionPrefix": {
        "nice_name": "Mention prefix",
        "description": "Whether the bot will respond to a mention as a prefix."
      },
      "deleteCommand": {
        "nice_name": "Delete command after execution",
        "description": "Whether the original command messages should be deleted after running the command."
      },
      "useEmbedForMessages": {
        "nice_name": "Use embeds for messages",
        "description": "Whether to use embedded messages to display information."
      },
      "showPermErrors": {
        "nice_name": "Show permission errors",
        "description": "Whether to show an error if someone does not have permission to do an action."
      },
      "showModuleErrors": {
        "nice_name": "Show module errors",
        "description": "Whether to show an error when trying to run a command from a disabled module."
      },
      "adminsHaveAllPerms": {
        "nice_name": "Admins have all permissions",
        "description": "Whether users with the \"Administrator\" permission are able to run all actions on the bot."
      },
      "allowTagCommands": {
        "nice_name": "Allow tags to be used as commands",
        "description": "Whether tags can be executed using ;<tagname>."
      },
      "enabledModules": {
        "nice_name": "Enabled modules",
        "description": "The modules whose commands are allowed to be ran on the server."
      },
      "prefix": {
        "nice_name": "Prefix",
        "description": "The prefix for all commands directed at the bot. It is recommended to make sure that this doesn't conflict with other bots."
      },
      "tags": {
        "nice_name": "Tags",
        "description": "The tags saved on this server."
      }
    }
  },
  "placeholders": {
    "server": {
      "description": "Gets information about the current server"
    },
    "member_count": {
      "description": "Gets the amount of people in this server"
    },
    "sender": {
      "description": "Gets the user who executed the tag"
    },
    "channel": {
      "description": "Gets the channel that the tag was ran in"
    },
    "time": {
      "description": "Gets the current time"
    },
    "args": {
      "description": "Injects a specified argument (zero indexed)"
    }
  }
}