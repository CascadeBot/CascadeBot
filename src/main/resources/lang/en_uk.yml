command_descriptions:
  # Core
  invite: "Returns the bot invite link, to invite the bot to other Discord guilds."
  prefix: "Gets and sets the current guild prefix."
  support: "Returns a link to the Discord support server."
  usage: "Gets the usage for a command."
  # Fun
  cat: "Returns a random picture of a cat."
  dog: "Returns a random picture of a dog."
  # Informational
  roles: "Returns the server's roles."
  serverinfo: "Returns information regarding the specified server."
  userinfo: "Returns information regarding the specified user."
  # Management
  module: "Interacts with modules by enabling, disabling or listing them."
  settings: "Allows users to change settings for the guild."
  # Moderation
  ban: "Bans or forcebans the specified user."
  kick: "Kicks the specified user."
  softban: "Bans and then unbans a specified user in order to remove messages and kick the user."
  unban: "Unbans the specified user."
  # Subcommands
  guild:
    flag: "Toggles a flag for this guild [or a different guild]."
    leave: "Instructs the bot to leave the current guild."
    save: "Save the current guild's data."
  module:
    disable: "Disables the specified module."
    enable: "Enables the specified module."
    list: "Lists all modules."
commands:
  # Common
  responses:
    invalid_user: "Invalid User!"
    cannot_find_guild: "We cannot find that guild!"
  statuses:
    streaming: "Streaming"
  # Core
  support:
    cascade_support_server: "Cascade Support Server: {invite_link}"
  prefix:
    prefix_reset: "The prefix has been reset to: `{default_prefix}`"
    prefix_too_long: "The requested prefix is too long!"
    new_prefix: "The new prefix is: `{new_prefix}`"
    current_prefix: "The current server prefix is `{current_prefix}`"
  usage:
    specify_usage: "Please specify command to get usage from!"
    command_not_found: "Command `{command}` not found!"
  # Fun
  cat:
    error_loading: "Error loading cat picture! {frowning_emoji}"
  dog:
    error_loading: "Error loading dog picture! {frowning_emoji}"
  # Informational
  roles:
    table_header_1: "Role ID"
    table_header_2: "Role Name"
  serverinfo:
    guild_creation_date: "Creation Date"
    guild_name: "Guild Name"
    guild_owner: "Owner"
    guild_region: "Region"
    guild_member_count: "Member Count"
    guild_id: "Guild ID"
  userinfo:
    user_created: "User Created"
    user_join_date: "Join Date"
    user_id: "User ID"
    user_mutual_servers: "Mutual Servers"
    status: "Status"
    activity: "Activity"
    role_id: "Role ID"
    role_name: "Role Name"
  # Management
  settings:
    cannot_edit: "You cannot edit this setting! You need the: {flag} flag to do this!"
    setting_set: "Setting {setting} has been set to a value of {value}."
    cannot_access: "Could not access that setting!"
    setting: "Setting"
    current_value: "Current value"
    cannot_find_field: "Cannot find that field!"
  # Moderation
  ban:
    cannot_find_user: "We can't find that user!"
    forcefully_ban?: "**We couldn't find that user in this guild!** \n If you would like to forcefully ban them, please react to this message!"
  kick:
    cannot_find_user: "Could not find that user!"
  softban:
    no_specified_user: "Not enough arguments (No specified member)"
    cannot_find_user: "Could not find that user!"
  unban:
    cannot_unban: "Could not find a user to unban matching: {target}"
    several_matches: "There is more than one user that matches this criteria! \n Please enter the ID or the user's full name!"
  # Subcommands
  guild:
    flag:
      flags: "Flags"
      invalid_flag: "Invalid flag! Possible values: {values}"
      cannot_find_guild: "Cannot find that guild!"
      invalid_guild_id: "Invalid guild ID!"
      disabled_flag: "Disabled flag `{flag}` for guild `{guild} ({id})`"
      enabled_flag: "Enabled flag `{flag}` for guild `{guild} ({id})`"
    leave:
      leave_message: "Goodbye!"
    save:
      saved_guild_successfully: "Saved **this guild's** information successfully!"
      saved_all_successfully: "Saved **all** guild information successfully!"
      cannot_save: "Cannot find guild to save!"
      saved_other_successfully: "Saved guild information for guild **{arg}**!"
  module:
    disable:
      disabled: "The module `{module}` has been disabled!"
      already_disabled: "The module `{module}` is already disabled!"
      cannot_find_module: "We couldn't find that module. Use `{prefix}module list` for a list of modules."
    enable:
      enabled: "The module `{module}` has been enabled!"
      already_enabled: "The module `{module}` is already enabled!"
      cannot_find_module: "We couldn't find that module. Use `{prefix}module list` for a list of modules."
    list:
      enabled: "Enabled"
      disabled: "Disabled"